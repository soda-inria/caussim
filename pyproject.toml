[tool.poetry]
name = "caussim"
version = "0.0.0"
description = "Causal Inference Simulations"
authors = ["Matthieu Doutreligne"]
license = "Apache-2.0"
readme = "README.md"
repository = "caussim"
homepage = ""
include = ["bin"]
packages = [
    { include = "caussim"},
]
keywords = []
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# [tool.poetry.urls]
# Changelog = 

[tool.poetry.dependencies]
python = ">=3.8, <=3.10.6"

# Project-Specific
python-dotenv = "^0.15.0"
click = "^8.0.1"
yapf = "^0.31.0"
matplotlib = "^3.4.2"
numpy = "^1.20.3"
seaborn = "0.12.2"
jupytext = "^1.11.5"
rope = "^0.19.0"
scikit-learn = "^1.0"
jedi = "^0.18.0"
tqdm = "^4.62.3"
tabulate = "^0.8.9"
statsmodels = "^0.13.1"
pyarrow = "^6.0.1"
submitit = "^1.4.1"
rpy2 = "^3.4.5"
moepy = "^1.1.4"

[tool.poetry.dev-dependencies]

# Type Checking and Data Validation
mypy = "^0.812" # Static type checker
py-spy = "^0.3.10"
ipdb = "^0.13.9"
jupyter = "^1.0.0"
jupyterlab = "^3.0.16"

# Testing
pytest = "^6.2.1"
pytest-cov = "^2.10.1"
pytest-mock = "^3.6.0"
pytest-sugar = "^0.9.4"
pytest-xdist = "^2.2.1"
xdoctest = {extras = ["all"], version = "^0.15.4"}

# Linting
## Code formatting
black = "^21.4b2" # see: https://black.readthedocs.io/en/stable/editor_integration.html
## Code quality
pylint = "^2.8.1"
## Automation and management
pre-commit = "^2.12.1"
jupytext = "^1.13.0"

[tool.poetry.group.docs.dependencies]
importlib-metadata = { version = "^4.11.3", optional = true }
myst-parser = { version = "^0.17.0", optional = true }
pygments = { version = "^2.11.2", optional = true }
sphinx = { version = "^4.4.0", optional = true }
sphinx-autodoc-typehints = { version = "^1.17.0", optional = true }
pydata-sphinx-theme = "0.11.0"
sphinxcontrib-apidoc = { version = "^0.3.0", optional = true }
sphinx-click = { version = "^3.1.0", optional = true }



[tool.poetry.scripts]
cli = "bin.cli:cli"

#################################################################################
# Tooling configs                                                               #
#################################################################################
[tool.coverage.run]
branch = true
concurrency = ["multiprocessing"]
parallel = true
source = ["caussim"]

[tool.coverage.report]
exclude_lines =[
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
fail_under = 70
show_missing = true
skip_covered = true

[tool.isort]
profile = "black"
atomic = "true"
combine_as_imports = "true"

[tool.pylint.basic]
good-names-rgxs = ["^Test_.*$"]

[tool.pylint.messages_control]
disable = [
  # Explicitly document only as needed
  "missing-module-docstring",
  "missing-class-docstring",
  "missing-function-docstring",
  # Black & Flake8 purview
  "line-too-long",
  "bad-continuation",
  "c-extension-no-member",
  "logging-fstring-interpolation"
]

[tool.pylint.similarities]
# Ignore imports when computing similarities.
ignore-imports = "yes"

[tool.pytest.ini_options]
addopts = ["-rfsxX", "-l", "--tb=native", "--strict-markers", "-vv", "--xdoctest"]
xfail_strict = "true"
testpaths = ["tests",]
norecursedirs = [".*", "*.egg", "build", "dist",]
# activate logging in pytest
log_cli = true
log_cli_level = "ERROR"
log_cli_format = "%(message)s"

log_file = "pytest.log"
log_file_level = "INFO"
log_file_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_file_date_format = "%Y-%m-%d %H:%M:%S"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry2conda]
name = "caussim"
